name: Infra Provisioning through Terraform

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (e.g., dev, staging, prod)"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - staging
          - prod

  push:
    branches:
      - main

  pull_request:
    branches:
      - main
      
permissions:
  contents: read
  pull-requests: write   
  id-token: write  

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      # Step 3: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          role-session-name: GitHubActions
          aws-region: us-east-1

      # Step 4: Install TFLint
      - name: Install TFLint
        run: |
          curl -fsSL https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          echo "$HOME/.tflint/bin" >> $GITHUB_PATH

      # Step 5: Verify Infra Directory
      - name: Debug Directory
        run: ls -R

      # Step 6: Run TFLint (Terraform Linter)
      - name: Run TFLint
        run: |
          tflint --init
          tflint infra/

      # Step 7: Initialize Terraform
      - name: Terraform Init
        run: terraform init -backend-config=environment/${{ github.event.inputs.environment }}.backend --chdir=infra/

      # Step 8: Validate Terraform Configuration
      - name: Terraform Validate
        run: terraform validate --chdir=infra/

      # Step 9: Terraform Plan
      - name: Terraform Plan
        run: terraform plan -var-file=environment/${{ github.event.inputs.environment }}.tfvars --chdir=infra/

      # Step 10: Terraform Apply (Only on Push)
      - name: Terraform Apply
        if: github.event_name == 'push'
        run: terraform apply -auto-approve -var-file=environment/${{ github.event.inputs.environment }}.tfvars --chdir=infra/

      # Step 11: Terraform Destroy (Manual Trigger Only)
      - name: Terraform Destroy
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'destroy'
        run: terraform destroy -auto-approve -var-file=environment/${{ github.event.inputs.environment }}.tfvars --chdir=infra/
